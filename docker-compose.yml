version: '3.8'

# Discord Bot with Full Music Functionality
# Features:
# - Complete yt-dlp integration for YouTube music
# - Python HTTP service for audio extraction
# - High-quality Discord voice streaming
# - Automatic service management

services:
  pxnx-discord-bot:
    # Use pre-built image from GitHub Container Registry
    image: ghcr.io/postmodum37/pxnx-discord-bot-go:latest

    # Alternatively, build from local Dockerfile
    # build:
    #   context: .
    #   dockerfile: Dockerfile

    container_name: pxnx-discord-bot

    # Environment variables
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}

    # Alternative: use env_file
    # env_file:
    #   - .env

    # Restart policy
    restart: unless-stopped

    # Resource limits (increased for yt-dlp service)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.5'

    # Volumes for yt-dlp cache
    volumes:
      - ytdlp-cache:/tmp/ytdlp-cache

    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "pxnx-discord-bot"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Security options
    security_opt:
      - no-new-privileges:true

    # Read-only root filesystem (disabled due to yt-dlp cache writes)
    # read_only: true

    # Networks
    networks:
      - bot-network

    # Ports (expose yt-dlp service port for health checks)
    ports:
      - "8080:8080"

# Volumes
volumes:
  ytdlp-cache:
    driver: local

# Networks
networks:
  bot-network:
    driver: bridge